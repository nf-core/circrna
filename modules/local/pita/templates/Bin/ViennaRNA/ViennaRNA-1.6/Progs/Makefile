# Makefile.in generated by automake 1.9.5 from Makefile.am.
# Progs/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



SOURCES = RNALfold.c RNAalifold.c RNAcofold.c RNAdistance.c RNAmotif_distance.c RNAduplex.c RNAeval.c RNAfold.c RNAheat.c RNAinverse.c RNApaln.c RNApdist.c RNAplfold.c RNAplot.c RNAsubopt.c RNAstats.c RNAddG.c RNAddG4.c

srcdir = .
top_srcdir = ..

pkgdatadir = $(datadir)/ViennaRNA
pkglibdir = $(libdir)/ViennaRNA
pkgincludedir = $(includedir)/ViennaRNA
top_builddir = ..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
bin_PROGRAMS = RNAfold$(EXEEXT) RNAeval$(EXEEXT) RNAheat$(EXEEXT) \
	RNApdist$(EXEEXT) RNAdistance$(EXEEXT) RNAmotif_distance$(EXEEXT) RNAinverse$(EXEEXT) \
	RNAplot$(EXEEXT) RNAsubopt$(EXEEXT) RNALfold$(EXEEXT) \
	RNAcofold$(EXEEXT) RNApaln$(EXEEXT) RNAduplex$(EXEEXT) \
	RNAalifold$(EXEEXT) RNAplfold$(EXEEXT)
subdir = Progs
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS)
RNALfold_SOURCES = RNALfold.c
RNALfold_OBJECTS = RNALfold.$(OBJEXT)
RNALfold_LDADD = $(LDADD)
RNALfold_DEPENDENCIES = ../lib/libRNA.a
RNAalifold_SOURCES = RNAalifold.c
RNAalifold_OBJECTS = RNAalifold.$(OBJEXT)
RNAalifold_LDADD = $(LDADD)
RNAalifold_DEPENDENCIES = ../lib/libRNA.a
RNAcofold_SOURCES = RNAcofold.c
RNAcofold_OBJECTS = RNAcofold.$(OBJEXT)
RNAcofold_LDADD = $(LDADD)
RNAcofold_DEPENDENCIES = ../lib/libRNA.a
RNAdistance_SOURCES = RNAdistance.c
RNAdistance_OBJECTS = RNAdistance.$(OBJEXT)
RNAdistance_LDADD = $(LDADD)
RNAdistance_DEPENDENCIES = ../lib/libRNA.a
RNAmotif_distance_SOURCES = RNAmotif_distance.c
RNAmotif_distance_OBJECTS = RNAmotif_distance.$(OBJEXT)
RNAmotif_distance_LDADD = $(LDADD)
RNAmotif_distance_DEPENDENCIES = ../lib/libRNA.a
RNAduplex_SOURCES = RNAduplex.c
RNAduplex_OBJECTS = RNAduplex.$(OBJEXT)
RNAduplex_LDADD = $(LDADD)
RNAduplex_DEPENDENCIES = ../lib/libRNA.a
RNAeval_SOURCES = RNAeval.c
RNAeval_OBJECTS = RNAeval.$(OBJEXT)
RNAeval_LDADD = $(LDADD)
RNAeval_DEPENDENCIES = ../lib/libRNA.a
RNAfold_SOURCES = RNAfold.c
RNAfold_OBJECTS = RNAfold.$(OBJEXT)
RNAfold_LDADD = $(LDADD)
RNAfold_DEPENDENCIES = ../lib/libRNA.a
RNAheat_SOURCES = RNAheat.c
RNAheat_OBJECTS = RNAheat.$(OBJEXT)
RNAheat_LDADD = $(LDADD)
RNAheat_DEPENDENCIES = ../lib/libRNA.a
RNAinverse_SOURCES = RNAinverse.c
RNAinverse_OBJECTS = RNAinverse.$(OBJEXT)
RNAinverse_LDADD = $(LDADD)
RNAinverse_DEPENDENCIES = ../lib/libRNA.a
RNApaln_SOURCES = RNApaln.c
RNApaln_OBJECTS = RNApaln.$(OBJEXT)
RNApaln_LDADD = $(LDADD)
RNApaln_DEPENDENCIES = ../lib/libRNA.a
RNApdist_SOURCES = RNApdist.c
RNApdist_OBJECTS = RNApdist.$(OBJEXT)
RNApdist_LDADD = $(LDADD)
RNApdist_DEPENDENCIES = ../lib/libRNA.a
RNAplfold_SOURCES = RNAplfold.c
RNAplfold_OBJECTS = RNAplfold.$(OBJEXT)
RNAplfold_LDADD = $(LDADD)
RNAplfold_DEPENDENCIES = ../lib/libRNA.a
RNAplot_SOURCES = RNAplot.c
RNAplot_OBJECTS = RNAplot.$(OBJEXT)
RNAplot_LDADD = $(LDADD)
RNAplot_DEPENDENCIES = ../lib/libRNA.a
RNAsubopt_SOURCES = RNAsubopt.c
RNAsubopt_OBJECTS = RNAsubopt.$(OBJEXT)
RNAsubopt_LDADD = $(LDADD)
RNAsubopt_DEPENDENCIES = ../lib/libRNA.a
RNAstats_SOURCES = RNAstats.c
RNAstats_OBJECTS = RNAstats.$(OBJEXT)
RNAstats_LDADD = $(LDADD)
RNAstats_DEPENDENCIES = ../lib/libRNA.a
RNAddG_SOURCES = RNAddG.c
RNAddG_OBJECTS = RNAddG.$(OBJEXT)
RNAddG_LDADD = $(LDADD)
RNAddG_DEPENDENCIES = ../lib/libRNA.a
RNAddG4_SOURCES = RNAddG4.c
RNAddG4_OBJECTS = RNAddG4.$(OBJEXT)
RNAddG4_LDADD = $(LDADD)
RNAddG4_DEPENDENCIES = ../lib/libRNA.a
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = RNALfold.c RNAalifold.c RNAcofold.c RNAdistance.c RNAmotif_distance.c\
	RNAduplex.c RNAeval.c RNAfold.c RNAheat.c RNAinverse.c \
	RNApaln.c RNApdist.c RNAplfold.c RNAplot.c RNAsubopt.c RNAstats.c RNAddG.c RNAddG4.c
DIST_SOURCES = RNALfold.c RNAalifold.c RNAcofold.c RNAdistance.c RNAmotif_distance.c\
	RNAduplex.c RNAeval.c RNAfold.c RNAheat.c RNAinverse.c \
	RNApaln.c RNApdist.c RNAplfold.c RNAplot.c RNAsubopt.c RNAstats.c RNAddG.c RNAddG4.c
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/rabani/Genie/Bin/ViennaRNA/ViennaRNA-1.6/missing --run aclocal-1.9
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /home/rabani/Genie/Bin/ViennaRNA/ViennaRNA-1.6/missing --run tar
AUTOCONF = ${SHELL} /home/rabani/Genie/Bin/ViennaRNA/ViennaRNA-1.6/missing --run autoconf
AUTOHEADER = ${SHELL} /home/rabani/Genie/Bin/ViennaRNA/ViennaRNA-1.6/missing --run autoheader
AUTOMAKE = ${SHELL} /home/rabani/Genie/Bin/ViennaRNA/ViennaRNA-1.6/missing --run automake-1.9
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = grep -E
EXEEXT = 
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
ISODATE = 2006-06-13
LDFLAGS = 
LIBOBJS = 
LIBS = 
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/rabani/Genie/Bin/ViennaRNA/ViennaRNA-1.6/missing --run makeinfo
MAKE_CLUSTER_FALSE = 
MAKE_CLUSTER_TRUE = #
MAKE_FORESTER_FALSE = #
MAKE_FORESTER_TRUE = 
MAKE_KINFOLD_FALSE = #
MAKE_KINFOLD_TRUE = 
MAKE_PERL_EXT_FALSE = #
MAKE_PERL_EXT_TRUE = 
OBJEXT = o
PACKAGE = ViennaRNA
PACKAGE_BUGREPORT = rna@tbi.univie.ac.at
PACKAGE_NAME = ViennaRNA
PACKAGE_STRING = ViennaRNA 1.6
PACKAGE_TARNAME = ViennaRNA
PACKAGE_VERSION = 1.6
PATH_SEPARATOR = :
PerlCmd = /usr/bin/perl
RANLIB = ranlib
SET_MAKE = 
SHELL = /bin/sh
STRIP = 
VERSION = 1.6
ac_ct_CC = gcc
ac_ct_RANLIB = ranlib
ac_ct_STRIP = 
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
datadir = ${prefix}/share
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
includedir = ${prefix}/include
infodir = ${prefix}/info
install_sh = /home/rabani/Genie/Bin/ViennaRNA/ViennaRNA-1.6/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localstatedir = ${prefix}/var
mandir = ${prefix}/man
mkdir_p = mkdir -p --
oldincludedir = /usr/include
prefix = /usr/local
program_transform_name = s,x,x,
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
subdirs =  RNAforester Kinfold
sysconfdir = ${prefix}/etc
target_alias = 
LDADD = ../lib/libRNA.a -lm
INCLUDES = -I../H
all: all-am

.SUFFIXES:
.SUFFIXES: .c .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  Progs/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  Progs/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(mkdir_p) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
RNALfold$(EXEEXT): $(RNALfold_OBJECTS) $(RNALfold_DEPENDENCIES) 
	@rm -f RNALfold$(EXEEXT)
	$(LINK) $(RNALfold_LDFLAGS) $(RNALfold_OBJECTS) $(RNALfold_LDADD) $(LIBS)
RNAalifold$(EXEEXT): $(RNAalifold_OBJECTS) $(RNAalifold_DEPENDENCIES) 
	@rm -f RNAalifold$(EXEEXT)
	$(LINK) $(RNAalifold_LDFLAGS) $(RNAalifold_OBJECTS) $(RNAalifold_LDADD) $(LIBS)
RNAcofold$(EXEEXT): $(RNAcofold_OBJECTS) $(RNAcofold_DEPENDENCIES) 
	@rm -f RNAcofold$(EXEEXT)
	$(LINK) $(RNAcofold_LDFLAGS) $(RNAcofold_OBJECTS) $(RNAcofold_LDADD) $(LIBS)
RNAdistance$(EXEEXT): $(RNAdistance_OBJECTS) $(RNAdistance_DEPENDENCIES) 
	@rm -f RNAdistance$(EXEEXT)
	$(LINK) $(RNAdistance_LDFLAGS) $(RNAdistance_OBJECTS) $(RNAdistance_LDADD) $(LIBS)
RNAmotif_distance$(EXEEXT): $(RNAmotif_distance_OBJECTS) $(RNAmotif_distance_DEPENDENCIES) 
	@rm -f RNAmotif_distance$(EXEEXT)
	$(LINK) $(RNAdistance_LDFLAGS) $(RNAmotif_distance_OBJECTS) $(RNAmotif_distance_LDADD) $(LIBS)
RNAduplex$(EXEEXT): $(RNAduplex_OBJECTS) $(RNAduplex_DEPENDENCIES) 
	@rm -f RNAduplex$(EXEEXT)
	$(LINK) $(RNAduplex_LDFLAGS) $(RNAduplex_OBJECTS) $(RNAduplex_LDADD) $(LIBS)
RNAeval$(EXEEXT): $(RNAeval_OBJECTS) $(RNAeval_DEPENDENCIES) 
	@rm -f RNAeval$(EXEEXT)
	$(LINK) $(RNAeval_LDFLAGS) $(RNAeval_OBJECTS) $(RNAeval_LDADD) $(LIBS)
RNAfold$(EXEEXT): $(RNAfold_OBJECTS) $(RNAfold_DEPENDENCIES) 
	@rm -f RNAfold$(EXEEXT)
	$(LINK) $(RNAfold_LDFLAGS) $(RNAfold_OBJECTS) $(RNAfold_LDADD) $(LIBS)
RNAheat$(EXEEXT): $(RNAheat_OBJECTS) $(RNAheat_DEPENDENCIES) 
	@rm -f RNAheat$(EXEEXT)
	$(LINK) $(RNAheat_LDFLAGS) $(RNAheat_OBJECTS) $(RNAheat_LDADD) $(LIBS)
RNAinverse$(EXEEXT): $(RNAinverse_OBJECTS) $(RNAinverse_DEPENDENCIES) 
	@rm -f RNAinverse$(EXEEXT)
	$(LINK) $(RNAinverse_LDFLAGS) $(RNAinverse_OBJECTS) $(RNAinverse_LDADD) $(LIBS)
RNApaln$(EXEEXT): $(RNApaln_OBJECTS) $(RNApaln_DEPENDENCIES) 
	@rm -f RNApaln$(EXEEXT)
	$(LINK) $(RNApaln_LDFLAGS) $(RNApaln_OBJECTS) $(RNApaln_LDADD) $(LIBS)
RNApdist$(EXEEXT): $(RNApdist_OBJECTS) $(RNApdist_DEPENDENCIES) 
	@rm -f RNApdist$(EXEEXT)
	$(LINK) $(RNApdist_LDFLAGS) $(RNApdist_OBJECTS) $(RNApdist_LDADD) $(LIBS)
RNAplfold$(EXEEXT): $(RNAplfold_OBJECTS) $(RNAplfold_DEPENDENCIES) 
	@rm -f RNAplfold$(EXEEXT)
	$(LINK) $(RNAplfold_LDFLAGS) $(RNAplfold_OBJECTS) $(RNAplfold_LDADD) $(LIBS)
RNAplot$(EXEEXT): $(RNAplot_OBJECTS) $(RNAplot_DEPENDENCIES) 
	@rm -f RNAplot$(EXEEXT)
	$(LINK) $(RNAplot_LDFLAGS) $(RNAplot_OBJECTS) $(RNAplot_LDADD) $(LIBS)
RNAsubopt$(EXEEXT): $(RNAsubopt_OBJECTS) $(RNAsubopt_DEPENDENCIES) 
	@rm -f RNAsubopt$(EXEEXT)
	$(LINK) $(RNAsubopt_LDFLAGS) $(RNAsubopt_OBJECTS) $(RNAsubopt_LDADD) $(LIBS)
RNAstats$(EXEEXT): $(RNAstats_OBJECTS) $(RNAstats_DEPENDENCIES) 
	@rm -f RNAstats$(EXEEXT)
	$(LINK) $(RNAstats_LDFLAGS) $(RNAstats_OBJECTS) $(RNAstats_LDADD) $(LIBS)
RNAddG$(EXEEXT): $(RNAddG_OBJECTS) $(RNAddG_DEPENDENCIES) 
	@rm -f RNAddG$(EXEEXT)
	$(LINK) $(RNAddG_LDFLAGS) $(RNAddG_OBJECTS) $(RNAddG_LDADD) $(LIBS)
RNAddG4$(EXEEXT): $(RNAddG4_OBJECTS) $(RNAddG4_DEPENDENCIES) 
	@rm -f RNAddG4$(EXEEXT)
	$(LINK) $(RNAddG4_LDFLAGS) $(RNAddG4_OBJECTS) $(RNAddG4_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/RNALfold.Po
include ./$(DEPDIR)/RNAalifold.Po
include ./$(DEPDIR)/RNAcofold.Po
include ./$(DEPDIR)/RNAdistance.Po
include ./$(DEPDIR)/RNAmotif_distance.Po
include ./$(DEPDIR)/RNAduplex.Po
include ./$(DEPDIR)/RNAeval.Po
include ./$(DEPDIR)/RNAfold.Po
include ./$(DEPDIR)/RNAheat.Po
include ./$(DEPDIR)/RNAinverse.Po
include ./$(DEPDIR)/RNApaln.Po
include ./$(DEPDIR)/RNApdist.Po
include ./$(DEPDIR)/RNAplfold.Po
include ./$(DEPDIR)/RNAplot.Po
include ./$(DEPDIR)/RNAsubopt.Po
include ./$(DEPDIR)/RNAstats.Po
include ./$(DEPDIR)/RNAddG.Po
include ./$(DEPDIR)/RNAddG4.Po

.c.o:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`
uninstall-info-am:

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-exec-am: install-binPROGRAMS

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-info-am

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic ctags distclean distclean-compile \
	distclean-generic distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-exec install-exec-am \
	install-info install-info-am install-man install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-binPROGRAMS uninstall-info-am

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
